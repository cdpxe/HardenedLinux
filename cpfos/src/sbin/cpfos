#!/bin/bash -e
# 
# cpfos [crazy packager from outa space] is distributed under the
# following license:
# 
# Copyright (c) 2007 Steffen Wendzel <steffen (at) wendzel (dot) de>
# Written 2007 by Steffen Wendzel
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Developers note for the coding style:
# BIG_CHAR_VAR   <-- var is exported
#small_char_var <-- only used within this script

# How does it work? -- An important note for all developers
# ---------------------------------------------------------
# cpfos currently does this steps in the following order:
# 
# - ...


pkgcmd=$1
pkgparam1=$2
pkgparam2=$3

hlver=`cat /etc/hardenedlinux-version`
UPDATE_DIR="false"

usage()
{
	echo "$0 [search|update|install|remove|create] package [params]"
}

find_repo()
{
	for repo in / /usr/src; do
		if [ -d $repo/hardenedlinux/$hlver/build/updates/.svn ]; then
			UPDATE_DIR=$repo/hardenedlinux/$hlver/build
		elif [ -d $repo/hardenedlinux/current/build/updates/.svn ]; then
			UPDATE_DIR=$repo/hardenedlinux/current/build
		elif [ -d $repo/$hlver/build/updates/.svn ]; then
			UPDATE_DIR=$repo/$hlver/build
		elif [ -d $repo/current/build/updates/.svn ]; then
			UPDATE_DIR=$repo/current/build
		elif [ -d $repo/build/updates/.svn ]; then
			UPDATE_DIR=$repo/build
		fi
	done

	if [ "$UPDATE_DIR" != "false" ]; then
		echo "Found repository in $UPDATE_DIR"
	else
		echo "unable to find a repository."
		echo "please checkout in / or /usr/src!"
		exit 1
	fi
}

for validcmd in search update install remove create; do
	if [ "$1" = "$validcmd" ]; then
		found="y"
	fi
done

if [ "$found" != "y" ]; then
	usage
	exit 1
fi

if [ "$pkgcmd" = "update" -o "$pkgcmd" = "search" ]; then
	find_repo
	echo "Checking for updates ..."
	cd $UPDATE_DIR
	echo "updating curvers file ..."
	svn up curvers
	svn up pkgfile
fi

export UPDATE_DIR

case "$pkgcmd" in
	"create")
		cpkg
		;;
	"update")
		upkg $pkgparam1
		;;
	"install")
		ipkg $pkgparam1
		;;
	"remove")
		rpkg $pkgparam1
		;;
	"search")
		spkg $pkgparam1
		;;
	*)
		echo "internal error. uncatched case!"
		exit 1
		;;
esac

exit 0


